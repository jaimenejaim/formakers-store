{"version":3,"sources":["../../controllers/oauth2.js"],"names":["repository","require","exports","find","bearerToken","Promise","resolve","reject","where","accessToken","then","catch","err","getClient","clientId","clientSecret"],"mappings":"AAAA;;AAEA,IAAMA,aAAaC,QAAQ,wBAAR,CAAnB;;AAGAC,QAAQC,IAAR,GAAe,UAACC,WAAD,EAAiB;AAC5B,WAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAkBC,MAAlB,EAA0B;AACzCP,mBAAWG,IAAX,CAAgB,EAAEK,OAAO,EAAEC,aAAaL,WAAf,EAAT,EAAhB,EACKM,IADL,CACU;AAAA,mBAAeJ,QAAQG,WAAR,CAAf;AAAA,SADV,EAEKE,KAFL,CAEW;AAAA,mBAAOJ,OAAOK,GAAP,CAAP;AAAA,SAFX;AAGH,KAJM,CAAP;AAKH,CAND;;AAQAV,QAAQW,SAAR,GAAoB,UAASC,QAAT,EAAmBC,YAAnB,EAAiC,CAEpD,CAFD","file":"oauth2.js","sourcesContent":["'use strict';\n\nconst repository = require('../repositories/oauth2');\n\n\nexports.find = (bearerToken) => {\n    return new Promise(function (resolve,reject) {\n        repository.find({ where: { accessToken: bearerToken } })\n            .then(accessToken => resolve(accessToken))\n            .catch(err => reject(err));\n    });\n};\n\nexports.getClient = function(clientId, clientSecret) {\n\n};\n\n"]}