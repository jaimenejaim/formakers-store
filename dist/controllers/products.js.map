{"version":3,"sources":["../../controllers/products.js"],"names":["repository","require","repository_category","repository_manufacturer","exports","findAll","req","res","next","then","result","length","status","json","catch","err","find","products","id","params","create","title","body","description","link","quantity","price","categoryId","manufacturerId","photos","photo_id","url","cover","message","update","delete","findAllByManufacturer","product","findAllByCategory"],"mappings":"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","file":"products.js","sourcesContent":["'use strict';\n\nconst repository = require('../repositories/products');\nconst repository_category = require('../repositories/categories');\nconst repository_manufacturer = require('../repositories/manufacturers');\n\nexports.findAll = (req, res, next) => {\n    repository.findAll()\n        .then(result => {\n            if(result.length === 0){\n                res.status(404).json({ \"message\" : \"Products not found\" });\n                return;\n            }\n            res.status(200).json(result);\n        }).catch(err => res.status(500).json(err));\n};\n\nexports.find = (req,res,next) => {\n\n    let products = {\n        id : req.params.id\n    };\n\n    repository.find(products)\n        .then(result => {\n            if(!result){\n                res.status(404).json({ \"message\" : \"Product not found\" });\n                return;\n            }\n            res.status(200).json(result);\n        }).catch(err => res.status(500).json(err));\n};\n\nexports.create = (req, res, next) => {\n\n    let products = {\n        title : req.body.title,\n        description: req.body.description,\n        link: req.body.link,\n        quantity: req.body.quantity,\n        price: req.body.price,\n        categoryId: req.body.categoryId,\n        manufacturerId: req.body.manufacturerId,\n        photos : [\n            {\n                photo_id : 'ASik1230ajaA',\n                url : 'http://res.cloudinary.com/drfcfazt5/image/upload/v1513449856/cicaqlqbmpaiizruevrj.jpg',\n                cover : true\n            }, {\n                photo_id : 'ASikjsoi1j23',\n                url : 'http://res.cloudinary.com/drfcfazt5/image/upload/v1513449856/wuwxsajqqp9ovqeobu0w.jpg',\n             cover : false\n            }, {\n                photo_id : 'e0eX12osoi1j23',\n                url : 'http://res.cloudinary.com/drfcfazt5/image/upload/v1513449855/va7ugcrig8zzajrvpbty.jpg',\n                cover : false\n            }\n        ]\n    };\n\n    repository.create(products).then(() => {\n        res.status(200).json({ message : \"Created Successfully\"});\n    }).catch(err => {\n        res.status(500).json({ message : err.message });\n    });\n\n};\n\n\nexports.update = (req,res,next) => {\n    let products = {\n        id : req.params.id,\n        description : req.body.description\n    };\n\n    repository.update(products)\n        .then(result => res.status(200).json({ message : \"Updated Successfully\"}))\n        .catch(err => res.status(500).json(err));\n};\n\n\nexports.delete = (req,res,next) => {\n    let products = {\n        id : req.params.id\n    };\n\n    repository.delete(products.id)\n        .then(result => res.status(200).json({ message : \"Deleted Successfully\"}))\n        .catch(err =>{\n            if(err === 0)\n                res.status(404).json({ message : \"Not Found\" });\n            else\n                res.status(500).json(err);\n        });\n};\n\nexports.findAllByManufacturer = (req, res, next) => {\n\n    let product = {\n        id : req.params.id\n    };\n\n    repository.findAllByManufacturer(product)\n        .then(result => {\n            if(result.length === 0){\n                res.status(404).json({ \"message\" : \"Products not found\" });\n                return;\n            }\n            res.status(200).json(result);\n        }).catch(err => res.status(500).json(err));\n};\n\nexports.findAllByCategory = (req, res, next) => {\n\n    let product = {\n        id : req.params.id\n    };\n\n    repository.findAllByCategory(product)\n        .then(result => {\n            if(result.length === 0){\n                res.status(404).json({ \"message\" : \"Products not found\" });\n                return;\n            }\n            res.status(200).json(result);\n        }).catch(err => res.status(500).json(err));\n};\n"]}