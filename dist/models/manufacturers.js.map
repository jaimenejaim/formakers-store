{"version":3,"sources":["../../models/manufacturers.js"],"names":["module","exports","sequelize","DataTypes","manufacturers","define","id","allowNull","autoIncrement","primaryKey","type","BIGINT","description","TEXT","unique","args","msg","is_active","INTEGER","require","defaultValue","get","getDataValue","set","value","setDataValue","createdAt","DATE","literal","updatedAt","associate","models","hasMany","products"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACvC,QAAMC,gBAAgBF,UAAUG,MAAV,CAAiB,eAAjB,EAAkC;AACpDC,YAAI;AACAC,uBAAW,KADX;AAEAC,2BAAe,IAFf;AAGAC,wBAAY,IAHZ;AAIAC,kBAAMP,UAAUQ;AAJhB,SADgD;AAOpDC,qBAAc;AACZF,kBAAMP,UAAUU,IADJ;AAEVN,uBAAY,IAFF;AAGVO,oBAAS;AACPC,sBAAM,IADC;AAELC,qBAAM;AAFD;AAHC,SAPsC;AAepDC,mBAAY;AACRP,kBAAOP,UAAUe,OADT;AAERC,qBAAS,IAFD;AAGRC,0BAAe,CAHP;AAIRC,iBAAK,eAAY;AACb,wBAAQ,KAAKC,YAAL,CAAkB,WAAlB,CAAR;AACI,yBAAK,CAAL;AACI,+BAAO,SAAP;AACJ,yBAAK,CAAL;AACI,+BAAO,UAAP;AAJR;AAOH,aAZO;AAaRC,iBAAK,aAAUC,KAAV,EAAiB;AAClB,wBAAQA,KAAR;AACI,yBAAK,SAAL;AACI,+BAAO,KAAKC,YAAL,CAAkB,WAAlB,EAA+B,CAA/B,CAAP;AACJ,yBAAK,UAAL;AACI,+BAAO,KAAKA,YAAL,CAAkB,WAAlB,EAA+B,CAA/B,CAAP;AAJR;AAMH;AApBO,SAfwC;AAqCpDC,mBAAW;AACPhB,kBAAMP,UAAUwB,IADT;AAEPP,0BAAclB,UAAU0B,OAAV,CAAkB,OAAlB;AAFP,SArCyC;AAyCpDC,mBAAW;AACPnB,kBAAMP,UAAUwB,IADT;AAEPP,0BAAclB,UAAU0B,OAAV,CAAkB,OAAlB;AAFP;AAzCyC,KAAlC,CAAtB;AA8CAxB,kBAAc0B,SAAd,GAA0B,UAAUC,MAAV,EAAkB;AACxC3B,sBAAc4B,OAAd,CAAsBD,OAAOE,QAA7B;AACH,KAFD;;AAIA,WAAO7B,aAAP;AACH,CApDD","file":"manufacturers.js","sourcesContent":["'use strict';\n\nmodule.exports = (sequelize, DataTypes) => {\n    const manufacturers = sequelize.define('manufacturers', {\n        id: {\n            allowNull: false,\n            autoIncrement: true,\n            primaryKey: true,\n            type: DataTypes.BIGINT\n        },\n        description : {\n          type: DataTypes.TEXT,\n            allowNull : true,\n            unique : {\n              args: true,\n                msg : 'The manufacturer with the informed description is already in use.'\n            }\n        },\n        is_active : {\n            type : DataTypes.INTEGER,\n            require: true,\n            defaultValue : 1,\n            get: function () {\n                switch (this.getDataValue('is_active')) {\n                    case 1:\n                        return 'enabled';\n                    case 0:\n                        return 'disabled';\n                }\n\n            },\n            set: function (value) {\n                switch (value) {\n                    case 'enabled':\n                        return this.setDataValue('is_active', 1);\n                    case 'disabled':\n                        return this.setDataValue('is_active', 0);\n                }\n            }\n        },\n        createdAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        },\n        updatedAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        }\n    });\n    manufacturers.associate = function (models) {\n        manufacturers.hasMany(models.products);\n    };\n\n    return manufacturers;\n};\n"]}