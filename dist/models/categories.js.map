{"version":3,"sources":["../../models/categories.js"],"names":["module","exports","sequelize","DataTypes","categories","define","id","allowNull","autoIncrement","primaryKey","type","BIGINT","description","TEXT","is_active","INTEGER","require","defaultValue","get","getDataValue","set","value","setDataValue","is_inactiveAt","DATE","createdAt","literal","updatedAt","associate","models","hasMany","products"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACvC,QAAMC,aAAaF,UAAUG,MAAV,CAAiB,YAAjB,EAA+B;AAC9CC,YAAI;AACAC,uBAAW,KADX;AAEAC,2BAAe,IAFf;AAGAC,wBAAY,IAHZ;AAIAC,kBAAMP,UAAUQ;AAJhB,SAD0C;AAO9CC,qBAAc;AACVF,kBAAMP,UAAUU,IADN;AAEVN,uBAAY;AAFF,SAPgC;AAW9CO,mBAAY;AACRJ,kBAAOP,UAAUY,OADT;AAERC,qBAAS,IAFD;AAGRC,0BAAe,CAHP;AAIRC,iBAAK,eAAY;AACb,wBAAQ,KAAKC,YAAL,CAAkB,WAAlB,CAAR;AACI,yBAAK,CAAL;AACI,+BAAO,SAAP;AACJ,yBAAK,CAAL;AACI,+BAAO,UAAP;AAJR;AAOH,aAZO;AAaRC,iBAAK,aAAUC,KAAV,EAAiB;AAClB,wBAAQA,KAAR;AACI,yBAAK,SAAL;AACI,+BAAO,KAAKC,YAAL,CAAkB,WAAlB,EAA+B,CAA/B,CAAP;AACJ,yBAAK,UAAL;AACI,+BAAO,KAAKA,YAAL,CAAkB,WAAlB,EAA+B,CAA/B,CAAP;AAJR;AAMH;AApBO,SAXkC;AAiC9CC,uBAAgB;AACdb,kBAAMP,UAAUqB,IADF;AAEdjB,uBAAY;AAFE,SAjC8B;AAqC9CkB,mBAAW;AACPf,kBAAMP,UAAUqB,IADT;AAEPP,0BAAcf,UAAUwB,OAAV,CAAkB,OAAlB;AAFP,SArCmC;AAyC9CC,mBAAW;AACPjB,kBAAMP,UAAUqB,IADT;AAEPP,0BAAcf,UAAUwB,OAAV,CAAkB,OAAlB;AAFP;AAzCmC,KAA/B,CAAnB;AA8CAtB,eAAWwB,SAAX,GAAuB,UAAUC,MAAV,EAAkB;AACrCzB,mBAAW0B,OAAX,CAAmBD,OAAOE,QAA1B;AACH,KAFD;;AAIA,WAAO3B,UAAP;AACH,CApDD","file":"categories.js","sourcesContent":["'use strict';\n\nmodule.exports = (sequelize, DataTypes) => {\n    const categories = sequelize.define('categories', {\n        id: {\n            allowNull: false,\n            autoIncrement: true,\n            primaryKey: true,\n            type: DataTypes.BIGINT\n        },\n        description : {\n            type: DataTypes.TEXT,\n            allowNull : true\n        },\n        is_active : {\n            type : DataTypes.INTEGER,\n            require: true,\n            defaultValue : 1,\n            get: function () {\n                switch (this.getDataValue('is_active')) {\n                    case 1:\n                        return 'enabled';\n                    case 0:\n                        return 'disabled';\n                }\n\n            },\n            set: function (value) {\n                switch (value) {\n                    case 'enabled':\n                        return this.setDataValue('is_active', 1);\n                    case 'disabled':\n                        return this.setDataValue('is_active', 0);\n                }\n            }\n        },\n        is_inactiveAt : {\n          type: DataTypes.DATE,\n          allowNull : true\n        },\n        createdAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        },\n        updatedAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        }\n    });\n    categories.associate = function (models) {\n        categories.hasMany(models.products);\n    };\n\n    return categories;\n};\n"]}