{"version":3,"sources":["../../models/users.js"],"names":["crypto","require","module","exports","sequelize","DataTypes","users","define","id","type","BIGINT","allowNull","autoIncrement","primaryKey","first_name","TEXT","required","last_name","INTEGER","values","defaultValue","get","getDataValue","set","value","setDataValue","email","notNull","unique","args","msg","password","validate","min","max","length","createHash","update","digest","is_active","createdAt","DATE","literal","updatedAt","last_login","associate","models","hasMany","users_tokens"],"mappings":"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","file":"users.js","sourcesContent":["'use strict';\n\nconst crypto = require('crypto');\n\nmodule.exports = (sequelize, DataTypes) => {\n    const users = sequelize.define('users', {\n        id: {\n            type: DataTypes.BIGINT,\n            allowNull: false,\n            autoIncrement: true,\n            primaryKey: true\n        },\n        first_name: {\n            type: DataTypes.TEXT,\n            allowNull: false,\n            required: true\n        },\n        last_name: {\n            type: DataTypes.TEXT,\n            allowNull: false,\n            required: true\n        },\n        type : {\n            type: DataTypes.INTEGER,\n            values: [1,2,3,4],\n            defaultValue : 2,\n            allowNull : false,\n            get: function() {\n                switch (this.getDataValue('type')){\n                    case 1:\n                        return 'public'; // Frente de loja\n                    case 2:\n                        return 'user'; //dashboard\n                    case 3:\n                        return 'admin'; //dashboard\n                    case 4:\n                        return 'super'; //dashboard\n                }\n            },\n            set: function(value) {\n                switch (value){\n                    case 'public':\n                        return this.setDataValue('type', 1);\n                    case 'user':\n                        return this.setDataValue('type', 2);\n                    case 'admin':\n                        return this.setDataValue('type', 3);\n                    case 'super':\n                        return this.setDataValue('type', 4);\n                }\n            }\n        },\n        email: {\n            type: DataTypes.TEXT,\n            notNull: true,\n            unique: {\n                args: true,\n                msg: 'this email is being used by someone else.'\n            }\n        },\n        password : {\n            type : DataTypes.TEXT,\n            required: true,\n            allowNull: false,\n            validate: {\n                min: {\n                    args: 6,\n                    msg: 'password must start with a letter, have no spaces, and be at least 6 characters.'\n                },\n                max: {\n                    args: 100,\n                    msg: 'password must start with a letter, have no spaces, and be at less than 100 characters.'\n                }\n            },\n            set: function (value)  {\n                if(value.length >= 6 && value.length <= 40)\n                    return this.setDataValue('password', crypto.createHash('md5').update(value).digest(\"hex\"));\n                else\n                    return this.setDataValue('password', value);\n            }\n        },\n        is_active : {\n            type: DataTypes.INTEGER,\n            allowNull : true,\n            defaultValue: 1,\n            get: function() {\n                switch (this.getDataValue('is_active')){\n                    case 0:\n                        return 'no'; // Frente de loja\n                    case 1:\n                        return 'yes'; //dashboard\n                }\n            },\n            set: function(value) {\n                switch (value){\n                    case 'no':\n                        return this.setDataValue('is_active', 0);\n                    case 'yes':\n                        return this.setDataValue('is_active', 1);\n                }\n            }\n        },\n        createdAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        },\n        updatedAt: {\n            type: DataTypes.DATE,\n            defaultValue: sequelize.literal('NOW()')\n        },\n        last_login: {\n            type: DataTypes.DATE\n        }\n    });\n\n    users.associate = function (models) {\n        users.hasMany(models.users_tokens);\n    };\n\n    return users;\n};\n"]}