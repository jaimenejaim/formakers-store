{"version":3,"sources":["../../bin/www"],"names":["app","require","debug","http","models","port","normalizePort","process","env","PORT","set","server","createServer","sequelize","sync","then","listen","address","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","exit","addr"],"mappings":";;AAEA;;;;AAIA,IAAIA,MAAMC,QAAQ,QAAR,CAAV;AACA,IAAIC,QAAQD,QAAQ,OAAR,EAAiB,wBAAjB,CAAZ;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,SAASH,QAAQ,iBAAR,CAAb;;AAEA;;;;AAIA,IAAII,OAAOC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAlC,CAAX;AACAT,IAAIU,GAAJ,CAAQ,MAAR,EAAgBL,IAAhB;;AAEA;;;;AAIA,IAAIM,SAASR,KAAKS,YAAL,CAAkBZ,GAAlB,CAAb;;AAEA;;;;AAIA;AACAI,OAAOS,SAAP,CAAiBC,IAAjB,GAAwBC,IAAxB,CAA6B,YAAM;AAC/B;;;;AAIA;AACA;AACA;AACA;AACA;;AAEAJ,WAAOK,MAAP,CAAcX,IAAd,EAAoB,YAAW;AAC/BH,cAAM,oBAAmBS,OAAOM,OAAP,EAAnB,GAAqC,sBAArC,GAA8DN,OAAOM,OAAP,GAAiBZ,IAArF;AACH,KAFG;;AAIJM,WAAOO,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAR,WAAOO,EAAP,CAAU,WAAV,EAAuBE,WAAvB;AAIC,CApBD;;AAsBA;;;;AAIA,SAASd,aAAT,CAAuBe,GAAvB,EAA4B;AACxB,QAAIhB,OAAOiB,SAASD,GAAT,EAAc,EAAd,CAAX;;AAEA,QAAIE,MAAMlB,IAAN,CAAJ,EAAiB;AACb;AACA,eAAOgB,GAAP;AACH;;AAED,QAAIhB,QAAQ,CAAZ,EAAe;AACX;AACA,eAAOA,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED;;;;AAIA,SAASc,OAAT,CAAiBK,KAAjB,EAAwB;AACpB,QAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC5B,cAAMD,KAAN;AACH;;AAED,QAAIE,OAAO,OAAOrB,IAAP,KAAgB,QAAhB,GACL,UAAUA,IADL,GAEL,UAAUA,IAFhB;;AAIA;AACA,YAAQmB,MAAMG,IAAd;AACI,aAAK,QAAL;AACIC,oBAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAnB,oBAAQsB,IAAR,CAAa,CAAb;AACA;AACJ,aAAK,YAAL;AACID,oBAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAnB,oBAAQsB,IAAR,CAAa,CAAb;AACA;AACJ;AACI,kBAAML,KAAN;AAVR;AAYH;;AAED;;;;AAIA,SAASJ,WAAT,GAAuB;AACnB,QAAIU,OAAOnB,OAAOM,OAAP,EAAX;AACA,QAAIS,OAAO,OAAOI,IAAP,KAAgB,QAAhB,GACL,UAAUA,IADL,GAEL,UAAUA,KAAKzB,IAFrB;AAGAH,UAAM,kBAAkBwB,IAAxB;AACH","file":"www.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nvar app = require('../app');\nvar debug = require('debug')('formakers-store:server');\nvar http = require('http');\nvar models = require('../models/index');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\n// models.sequelize.sync({force : true }).then(() => {\nmodels.sequelize.sync().then(() => {\n    /**\n     * Listen on provided port, on all network interfaces.\n     */\n\n    // seeds.up().then((result) => {\n    //   console.log(result);\n    // }).catch((err) => {\n    //   console.error(err);\n    // });\n\n    server.listen(port, function() {\n    debug('Express server '+ server.address() +', listening on port ' + server.address().port);\n});\n\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n\n\n});\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n    var port = parseInt(val, 10);\n\n    if (isNaN(port)) {\n        // named pipe\n        return val;\n    }\n\n    if (port >= 0) {\n        // port number\n        return port;\n    }\n\n    return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n    if (error.syscall !== 'listen') {\n        throw error;\n    }\n\n    var bind = typeof port === 'string'\n        ? 'Pipe ' + port\n        : 'Port ' + port;\n\n    // handle specific listen errors with friendly messages\n    switch (error.code) {\n        case 'EACCES':\n            console.error(bind + ' requires elevated privileges');\n            process.exit(1);\n            break;\n        case 'EADDRINUSE':\n            console.error(bind + ' is already in use');\n            process.exit(1);\n            break;\n        default:\n            throw error;\n    }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n    var addr = server.address();\n    var bind = typeof addr === 'string'\n        ? 'pipe ' + addr\n        : 'port ' + addr.port;\n    debug('Listening on ' + bind);\n}\n"]}