{"version":3,"sources":["../app.js"],"names":["express","require","path","logger","cookieParser","bodyParser","expressValidator","index","auth","users","manufacturers","categories","products","app","use","json","urlencoded","extended","req","res","next","err","Error","status","locals","message","error","get","errorMessage","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,eAAeH,QAAQ,eAAR,CAArB;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,mBAAmBL,QAAQ,mBAAR,CAAzB;AACA;AACA,IAAMM,QAAQN,QAAQ,gBAAR,CAAd;AACA,IAAMO,OAAOP,QAAQ,eAAR,CAAb;AACA,IAAMQ,QAAQR,QAAQ,gBAAR,CAAd;AACA,IAAMS,gBAAgBT,QAAQ,wBAAR,CAAtB;AACA,IAAMU,aAAaV,QAAQ,qBAAR,CAAnB;AACA,IAAMW,WAAWX,QAAQ,mBAAR,CAAjB;;AAEA,IAAMY,MAAMb,SAAZ;;AAGAa,IAAIC,GAAJ,CAAQX,OAAO,KAAP,CAAR;AACAU,IAAIC,GAAJ,CAAQT,WAAWU,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQT,WAAWW,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQV,cAAR;AACAS,IAAIC,GAAJ,CAAQR,kBAAR;;AAIAO,IAAIC,GAAJ,CAAQ,GAAR,EAAaP,KAAb;AACAM,IAAIC,GAAJ,CAAQ,OAAR,EAAiBN,IAAjB;AACAK,IAAIC,GAAJ,CAAQ,QAAR,EAAkBL,KAAlB;AACAI,IAAIC,GAAJ,CAAQ,gBAAR,EAA0BJ,aAA1B;AACAG,IAAIC,GAAJ,CAAQ,aAAR,EAAuBH,UAAvB;AACAE,IAAIC,GAAJ,CAAQ,WAAR,EAAqBF,QAArB;;AAGA;AACAC,IAAIC,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAR,IAAIC,GAAJ,CAAQ,UAACO,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIL,GAAJ,CAAQc,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;;AAEAJ,MAAIJ,IAAJ,CAAS,EAAEa,cAAeP,IAAII,OAArB,EAAT;AACD,CATD;;AAWAI,OAAOC,OAAP,GAAiBjB,GAAjB","file":"app.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst expressValidator = require('express-validator');\n//routes\nconst index = require('./routes/index');\nconst auth = require('./routes/auth');\nconst users = require('./routes/users');\nconst manufacturers = require('./routes/manufacturers');\nconst categories = require('./routes/categories');\nconst products = require('./routes/products');\n\nconst app = express();\n\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(expressValidator());\n\n\n\napp.use('/', index);\napp.use('/auth', auth);\napp.use('/users', users);\napp.use('/manufacturers', manufacturers);\napp.use('/categories', categories);\napp.use('/products', products);\n\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n\n  res.json({ errorMessage : err.message });\n});\n\nmodule.exports = app;\n"]}