{"version":3,"sources":["../../../components/oauth2/strategy.js"],"names":["db","require","exports","getAccessToken","bearerToken","callback","console","log","auth_access_tokens","find","where","accessToken","success","error","err","getClient","clientId","clientSecret","auth_clients","client","getUserFromClient","users","userId","user","grantTypeAllowed","grantType","getUser","username","password","saveAccessToken","expires","findOrCreate","id","token","created","updateAttributes","saveRefreshToken","refreshToken","auth_refresh_tokens","getRefreshToken","revokeRefreshToken"],"mappings":"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","file":"strategy.js","sourcesContent":["const db = require('../../models/index');\n\nexports.getAccessToken = function(bearerToken, callback) {\n    console.log('getAccessToken');\n    db.auth_access_tokens.find({ where: { accessToken: bearerToken } })\n        .success(function(accessToken) {\n            callback(null, accessToken);\n        })\n        .error(function(err) {\n            console.log('err', err);\n        });\n};\n\nexports.getClient = function(clientId, clientSecret, callback) {\n    console.log('getClient');\n    let where = {\n        clientId: clientId,\n        clientSecret: clientSecret\n    };\n    db.auth_clients.find({ where: where })\n        .success(function(client) {\n            callback(null, client);\n        });\n};\n\nexports.getUserFromClient = function(clientId, clientSecret, callback) {\n    console.log('getUserFromClient');\n    let where = {\n        clientId: clientId,\n        clientSecret: clientSecret\n    };\n    db.auth_clients.find({ where: where })\n        .success(function(client) {\n            if (!client) {\n                callback('invalid clientId or clientSecret');\n                return;\n            }\n            db.users.find(client.userId)\n                .success(function(user) {\n                    callback(false, user);\n                });\n        });\n};\n\nexports.grantTypeAllowed = function(clientId, grantType, callback) {\n    console.log('grantTypeAllowed');\n    callback(false, true);\n};\n\nexports.getUser = function(username, password, callback) {\n    console.log('getUser');\n    let where = {\n        username: username,\n        password: password\n    };\n    db.users.find({ where: where })\n        .success(function(user) {\n            callback(null, user);\n        });\n};\n\nexports.saveAccessToken = function(accessToken, clientId, expires, user, callback) {\n    console.log('saveAccessToken');\n    db.auth_access_tokens.findOrCreate({\n        userId: user.id\n    }).success(function(token, created) {\n            if (created) {\n                token.updateAttributes({\n                    accessToken: accessToken,\n                    clientId: clientId,\n                    expires: expires\n                })\n                    .success(function() {\n                        callback(false);\n                    });\n                return;\n            }\n            callback(false);\n        });\n},\n\n    exports.saveRefreshToken = function(refreshToken, clientId, expires, user, callback) {\n        console.log('saveRefreshToken');\n        db.auth_refresh_tokens.findOrCreate({\n            userId: user.id\n        })\n            .success(function(token, created) {\n                if (created) {\n                    token.updateAttributes({\n                        refreshToken: refreshToken,\n                        clientId: clientId,\n                        expires: expires\n                    })\n                        .success(function() {\n                            callback(false);\n                        });\n                    return;\n                }\n                callback(false);\n            });\n    };\n\nexports.getRefreshToken = function(refreshToken, callback) {\n    console.log('getRefreshToken');\n};\n\nexports.revokeRefreshToken = function(refreshToken, callback) {\n    console.log('revokeRefreshToken');\n};"]}