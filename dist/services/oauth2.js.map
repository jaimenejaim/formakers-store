{"version":3,"sources":["../../services/oauth2.js"],"names":["require","auth_access_tokens","auth_clients","users","auth_refresh_tokens","exports","getAccessToken","bearerToken","callback","console","log","find","where","accessToken","then","catch","err","getClient","clientId","clientSecret","client","getUserFromClient","userId","user","grantTypeAllowed","grantType","getUser","username","password","saveAccessToken","expires","findOrCreate","id","token","created","updateAttributes","saveRefreshToken","refreshToken","getRefreshToken","revokeRefreshToken"],"mappings":"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","file":"oauth2.js","sourcesContent":["// const controller = require('../controllers/oauth2');\n\nconst { auth_access_tokens , auth_clients , users, auth_refresh_tokens, } = require('../models/index');\n\nexports.getAccessToken = function(bearerToken, callback) {\n    console.log('getAccessToken');\n    auth_access_tokens.find({ where: { accessToken: bearerToken } })\n        .then(function(accessToken) {\n            callback(null, accessToken);\n        })\n        .catch(err => {\n            console.log('err', err);\n        });\n};\n\nexports.getClient = function(clientId, clientSecret, callback) {\n    console.log('getClient');\n    let where = {\n        clientId: clientId,\n        clientSecret: clientSecret\n    };\n    auth_clients.find({ where: where })\n        .then(function(client) {\n            callback(null, client);\n        })\n        .catch(err =>{\n            console.log('err', err);\n        });\n};\n\nexports.getUserFromClient = function(clientId, clientSecret, callback) {\n    console.log('getUserFromClient');\n    let where = {\n        clientId: clientId,\n        clientSecret: clientSecret\n    };\n    auth_clients.find({ where: where })\n        .then(function(client) {\n            if (!client) {\n                callback('invalid clientId or clientSecret');\n                return;\n            }\n            users.find(client.userId)\n                .then(function(user) {\n                    callback(false, user);\n                });\n        });\n};\n\nexports.grantTypeAllowed = function(clientId, grantType, callback) {\n    console.log('grantTypeAllowed');\n    callback(false, true);\n};\n\nexports.getUser = function(username, password, callback) {\n    console.log('getUser');\n    let where = {\n        username: username,\n        password: password\n    };\n    users.find({ where: where })\n        .then(function(user) {\n            callback(null, user);\n        });\n};\n\nexports.saveAccessToken = function(accessToken, clientId, expires, user, callback) {\n    console.log('saveAccessToken');\n    auth_access_tokens.findOrCreate({\n        userId: user.id\n    })\n        .then(function(token, created) {\n            if (created) {\n                token.updateAttributes({\n                    accessToken: accessToken,\n                    clientId: clientId,\n                    expires: expires\n                })\n                    .then(function() {\n                        callback(false);\n                    });\n                return;\n            }\n            callback(false);\n        });\n};\n\nexports.saveRefreshToken = function(refreshToken, clientId, expires, user, callback) {\n        console.log('saveRefreshToken');\n        auth_refresh_tokens.findOrCreate({\n            userId: user.id\n        })\n            .then(function(token, created) {\n                if (created) {\n                    token.updateAttributes({\n                        refreshToken: refreshToken,\n                        clientId: clientId,\n                        expires: expires\n                    })\n                        .then(function() {\n                            callback(false);\n                        });\n                    return;\n                }\n                callback(false);\n            });\n    };\n\nexports.getRefreshToken = function(refreshToken, callback) {\n    console.log('getRefreshToken');\n};\n\nexports.revokeRefreshToken = function(refreshToken, callback) {\n    console.log('revokeRefreshToken');\n};"]}