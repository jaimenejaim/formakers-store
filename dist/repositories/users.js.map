{"version":3,"sources":["../../repositories/users.js"],"names":["models","require","Users","users","attributes_login","attributes","attributes_admin","exports","logIn","email","password","Promise","resolve","reject","findOne","where","is_active","then","result","catch","err","findAll","find","id","create","data","user","save","update","updateAttributes","first_name","last_name","type","updatedObject","updateLastLogIn","now","Date","last_login","delete"],"mappings":"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","file":"users.js","sourcesContent":["'use strict';\n\nconst models = require('../models/index');\nconst Users = models.users;\n\nconst attributes_login = ['id', 'email','type','password'];\nconst attributes = ['id','first_name','last_name','type','email','is_active'];\nconst attributes_admin = ['id','first_name','last_name','type','email','is_active','createdAt','updatedAt','last_login'];\n\n\nexports.logIn = (email,password) => {\n    return new Promise((resolve,reject) => {\n        Users.findOne({ where : { email : email, password : password , is_active: 1 }, attributes : attributes_login })\n            .then(result => resolve(result))\n            .catch(err => reject(err));\n    });\n};\n\nexports.findAll = () => {\n    return new Promise((resolve,reject) => {\n        Users.findAll({ where : { is_active: 1 }, attributes : attributes_admin })\n            .then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.find = (id) => {\n    return new Promise((resolve,reject) => {\n        Users.find({ where : { id : id, is_active: 1  }, attributes : attributes_admin })\n            .then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.create = (data) => {\n    return new Promise((resolve,reject) => {\n        let user = new Users(data);\n        user.save().then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.update = (user) => {\n    return new Promise( (resolve, reject) => {\n        Users.find({ where: { id: user.id } }).then(result => {\n            return result.updateAttributes({\n                first_name : user.first_name,\n                last_name : user.last_name,\n                type : user.type\n            })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n    });\n};\n\nexports.updateLastLogIn = (user) => {\n    return new Promise( (resolve, reject) => {\n        Users.find({ where: { id: user.id } }).then(result => {\n            let now = Date.now();\n            return result.updateAttributes({\n                last_login : now\n            })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n    });\n};\n\nexports.delete = (id) => {\n    return new Promise( (resolve, reject) => {\n        Users.find({ where: { id: id } }).then(result => {\n            return result.updateAttributes({ is_active : 0 })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n    });\n};\n\n\n\n\n"]}