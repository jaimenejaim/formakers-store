{"version":3,"sources":["../../repositories/oauth2.js"],"names":["require","auth_access_tokens","auth_clients","exports","getAccessToken","bearerToken","Promise","resolve","reject","find","where","accessToken","then","result","catch","err","getClient","clientId","clientSecret","getUserFromClient","getUser","username","password","saveAccessToken","expires","user","saveRefreshToken","refreshToken"],"mappings":";;eAA+CA,QAAQ,iBAAR,C;IAAvCC,kB,YAAAA,kB;IAAoBC,Y,YAAAA,Y;;AAE5BC,QAAQC,cAAR,GAAyB,UAACC,WAAD,EAAiB;AACtC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnCP,2BAAmBQ,IAAnB,CAAwB,EAAEC,OAAO,EAAEC,aAAaN,WAAf,EAAT,EAAxB,EACKO,IADL,CACU;AAAA,mBAAUL,QAAQM,MAAR,CAAV;AAAA,SADV,EAEKC,KAFL,CAEW;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAFX;AAGH,KAJM,CAAP;AAKH,CAND;;AAQAZ,QAAQa,SAAR,GAAoB,UAASC,QAAT,EAAmBC,YAAnB,EAAiC;AACjD,WAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnCN,qBAAaO,IAAb,CAAkB,EAAEC,OAAO,EAAEO,UAAUA,QAAZ,EAAsBC,cAAcA,YAApC,EAAT,EAAlB,EACKN,IADL,CACU;AAAA,mBAAUL,QAAQM,MAAR,CAAV;AAAA,SADV,EAEKC,KAFL,CAEW;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAFX;AAGH,KAJM,CAAP;AAKH,CAND;;AAQAZ,QAAQgB,iBAAR,GAA4B,UAASF,QAAT,EAAmBC,YAAnB,EAAiC;AACzD,WAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB,CAEtC,CAFM,CAAP;AAGH,CAJD;;AAOAL,QAAQiB,OAAR,GAAkB,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AAC3C,WAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB,CAEtC,CAFM,CAAP;AAGH,CAJD;;AAOAL,QAAQoB,eAAR,GAA0B,UAASZ,WAAT,EAAsBM,QAAtB,EAAgCO,OAAhC,EAAyCC,IAAzC,EAA+C;AACrE,WAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB,CAEtC,CAFM,CAAP;AAGH,CAJD;;AAMAL,QAAQuB,gBAAR,GAA2B,UAASC,YAAT,EAAuBV,QAAvB,EAAiCO,OAAjC,EAA0CC,IAA1C,EAAgD;AACvE,WAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB,CAEtC,CAFM,CAAP;AAGH,CAJD","file":"oauth2.js","sourcesContent":["const { auth_access_tokens, auth_clients,  } = require('../models/index');\n\nexports.getAccessToken = (bearerToken) => {\n    return new Promise((resolve,reject) => {\n        auth_access_tokens.find({ where: { accessToken: bearerToken }})\n            .then(result => resolve(result))\n            .catch(err => reject(err));\n    });\n};\n\nexports.getClient = function(clientId, clientSecret) {\n    return new Promise((resolve,reject) => {\n        auth_clients.find({ where: { clientId: clientId, clientSecret: clientSecret }})\n            .then(result => resolve(result))\n            .catch(err => reject(err));\n    });\n};\n\nexports.getUserFromClient = function(clientId, clientSecret) {\n    return new Promise((resolve,reject) => {\n\n    });\n};\n\n\nexports.getUser = function(username, password) {\n    return new Promise((resolve,reject) => {\n\n    });\n};\n\n\nexports.saveAccessToken = function(accessToken, clientId, expires, user) {\n    return new Promise((resolve,reject) => {\n\n    });\n};\n\nexports.saveRefreshToken = function(refreshToken, clientId, expires, user) {\n    return new Promise((resolve,reject) => {\n\n    });\n};"]}