{"version":3,"sources":["../../repositories/products.js"],"names":["sequelize","require","models","Products","products","Category","categories","ProductsPhotos","productsphotos","attributes","attributes_details","exports","findAll","Promise","resolve","reject","where","is_active","include","model","cover","then","result","catch","err","find","product","id","manufacturers","create","data","transaction","t","photos","forEach","photo","index","console","log","productId","length","commit","rollback","update","updateAttributes","description","updatedObject","disable","delete","destroy","notify","findAllByManufacturer","manufacturerId","findAllByCategory","categoryId"],"mappings":"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","file":"products.js","sourcesContent":["'use strict';\n\nconst sequelize = require('../models/index').sequelize;\nconst models = require('../models/index');\nconst Products = models.products;\nconst Category = models.categories;\nconst ProductsPhotos = models.productsphotos;\n\nconst attributes = ['id','title','quantity','price','is_active','createdAt'];\nconst attributes_details = ['id','title','description','quantity','price','is_active','createdAt'];\n\nexports.findAll = () => {\n    return new Promise((resolve,reject) => {\n        Products.findAll({ where : { is_active: 1 }, attributes : attributes,\n            include : [\n                { model: models.productsphotos, attributes: ['url', 'cover','createdAt' ], where : { cover : true }  }\n                ]\n        }).then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.find = (product) => {\n    return new Promise((resolve,reject) => {\n        Products.find({ where : { id : product.id, is_active: 1  }, attributes: attributes_details,\n            include : [\n                    { model: models.productsphotos, attributes: ['url', 'cover','createdAt' ]},\n                    { model: models.categories, attributes: ['id','description'] },\n                    { model: models.manufacturers, attributes : ['id','description'] }\n                ]\n        }).then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.create = (data) => {\n    return new Promise((resolve,reject) => {\n\n        sequelize.transaction().then(t => {\n            Products.create(data, { transaction : t }).then(result => {\n                data.photos.forEach((photo,index) =>{\n                    console.log(result.id);\n                    photo.productId = result.id;\n                    ProductsPhotos.create(photo, { transaction : t }).then(() => {\n                        if(index === data.photos.length - 1){\n                            t.commit();\n                            resolve();\n                        }\n                    }).catch(err => {\n                        t.rollback();\n                        reject(err);\n                    });\n                });\n            }).catch(err => {\n                t.rollback();\n                reject(err);\n            });\n        });\n    });\n};\n\n\nexports.update = (product) => {\n    return new Promise( (resolve, reject) => {\n        Products.find({ where: { id: product.id } }).then(result => {\n            return result.updateAttributes({ description : product.description })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n\n    });\n};\n\nexports.disable = (id) => {\n    return new Promise( (resolve, reject) => {\n        Products.find({ where: { id: id } }).then(result => {\n            return result.updateAttributes({ is_active : 0 })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n    });\n};\n\nexports.delete = (id) => {\n    return new Promise( (resolve, reject) => {\n            Products.find({\n                where: {id: id}, include: [\n                    {model: models.productsphotos, attributes: ['id']}\n                ]\n            }).then(product => {\n\n                if(product){\n                    sequelize.transaction().then(t => {\n                        if(product.productsphotos.length > 0){\n                            product.productsphotos.forEach((photo, index) => {\n                                photo.destroy({ transaction : t }).then(() => {\n                                    if(index === product.productsphotos.length -1){\n                                        notify(t,product);\n                                    }\n                                }).catch(err => {\n                                    t.rollback();\n                                    reject(err);\n                                });\n                            });\n                        }else{\n                            notify(t,product);\n                        }\n\n                        function notify(t,result) {\n                            result.destroy({ transaction : t }).then(result => {\n                                t.commit();\n                                resolve(result);\n                            }).catch(err => {\n                                t.rollback();\n                                reject(err);\n                            });\n                        }\n                    });\n                }else {\n                    reject(0);\n                }\n            });\n\n    });\n};\n\n\nexports.findAllByManufacturer = (product) => {\n    return new Promise((resolve,reject) => {\n        Products.findAll({ where : { is_active: 1, manufacturerId : product.id }, attributes : attributes_details })\n            .then(result => resolve(result))\n            .catch(err => reject(err));\n    });\n};\n\n\nexports.findAllByCategory = (product) => {\n    return new Promise((resolve,reject) => {\n        Products.findAll({ where : { is_active: 1, categoryId : product.id }, attributes : attributes_details })\n            .then(result => resolve(result))\n            .catch(err => reject(err));\n    });\n};\n"]}