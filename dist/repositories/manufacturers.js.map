{"version":3,"sources":["../../repositories/manufacturers.js"],"names":["models","require","Manufacturer","manufacturers","exports","findAll","Promise","resolve","reject","where","is_active","attributes","then","result","catch","err","find","id","create","data","manufacturer","save","update","updateAttributes","description","updatedObject","delete"],"mappings":"AAAA;;AAEA,IAAMA,SAASC,QAAQ,iBAAR,CAAf;AACA,IAAMC,eAAeF,OAAOG,aAA5B;;AAEAC,QAAQC,OAAR,GAAkB,YAAM;AACpB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnCN,qBAAaG,OAAb,CAAqB,EAAEI,OAAQ,EAAEC,WAAW,CAAb,EAAV,EAA4BC,YAAa,CAAC,IAAD,EAAO,aAAP,EAAsB,WAAtB,CAAzC,EAArB,EACKC,IADL,CACU;AAAA,mBAAUL,QAAQM,MAAR,CAAV;AAAA,SADV,EACqCC,KADrC,CAC2C;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAD3C;AAEH,KAHM,CAAP;AAIH,CALD;;AAOAX,QAAQY,IAAR,GAAe,UAACC,EAAD,EAAQ;AACnB,WAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnCN,qBAAac,IAAb,CAAkB,EAAEP,OAAQ,EAAEQ,IAAKA,EAAP,EAAWP,WAAW,CAAtB,EAAV,EAAlB,EACKE,IADL,CACU;AAAA,mBAAUL,QAAQM,MAAR,CAAV;AAAA,SADV,EACqCC,KADrC,CAC2C;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAD3C;AAEH,KAHM,CAAP;AAIH,CALD;;AAOAX,QAAQc,MAAR,GAAiB,UAACC,IAAD,EAAU;AACvB,WAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACnC,YAAIY,eAAe,IAAIlB,YAAJ,CAAiBiB,IAAjB,CAAnB;AACAC,qBAAaC,IAAb,GAAoBT,IAApB,CAAyB;AAAA,mBAAUL,QAAQM,MAAR,CAAV;AAAA,SAAzB,EAAoDC,KAApD,CAA0D;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAA1D;AACH,KAHM,CAAP;AAIH,CALD;;AAQAX,QAAQkB,MAAR,GAAiB,UAACF,YAAD,EAAkB;AAC/B,WAAO,IAAId,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrCN,qBAAac,IAAb,CAAkB,EAAEP,OAAO,EAAEQ,IAAIG,aAAaH,EAAnB,EAAT,EAAlB,EAAsDL,IAAtD,CAA2D,kBAAU;AACjE,mBAAOC,OAAOU,gBAAP,CAAwB,EAAEC,aAAcJ,aAAaI,WAA7B,EAAxB,CAAP;AACH,SAFD,EAEGZ,IAFH,CAEQ;AAAA,mBAAiBL,QAAQkB,aAAR,CAAjB;AAAA,SAFR,EAEiDX,KAFjD,CAEuD;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAFvD;AAIH,KALM,CAAP;AAMH,CAPD;;AASAX,QAAQsB,MAAR,GAAiB,UAACT,EAAD,EAAQ;AACrB,WAAO,IAAIX,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrCN,qBAAac,IAAb,CAAkB,EAAEP,OAAO,EAAEQ,IAAIA,EAAN,EAAT,EAAlB,EAAyCL,IAAzC,CAA8C,kBAAU;AACpD,mBAAOC,OAAOU,gBAAP,CAAwB,EAAEb,WAAY,CAAd,EAAxB,CAAP;AACH,SAFD,EAEGE,IAFH,CAEQ;AAAA,mBAAiBL,QAAQkB,aAAR,CAAjB;AAAA,SAFR,EAEiDX,KAFjD,CAEuD;AAAA,mBAAON,OAAOO,GAAP,CAAP;AAAA,SAFvD;AAGH,KAJM,CAAP;AAKH,CAND","file":"manufacturers.js","sourcesContent":["'use strict';\n\nconst models = require('../models/index');\nconst Manufacturer = models.manufacturers;\n\nexports.findAll = () => {\n    return new Promise((resolve,reject) => {\n        Manufacturer.findAll({ where : { is_active: 1 }, attributes : ['id', 'description', 'createdAt'] })\n            .then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.find = (id) => {\n    return new Promise((resolve,reject) => {\n        Manufacturer.find({ where : { id : id, is_active: 1  } })\n            .then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\nexports.create = (data) => {\n    return new Promise((resolve,reject) => {\n        let manufacturer = new Manufacturer(data);\n        manufacturer.save().then(result => resolve(result)).catch(err => reject(err));\n    });\n};\n\n\nexports.update = (manufacturer) => {\n    return new Promise( (resolve, reject) => {\n        Manufacturer.find({ where: { id: manufacturer.id } }).then(result => {\n            return result.updateAttributes({ description : manufacturer.description })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n\n    });\n};\n\nexports.delete = (id) => {\n    return new Promise( (resolve, reject) => {\n        Manufacturer.find({ where: { id: id } }).then(result => {\n            return result.updateAttributes({ is_active : 0 })\n        }).then(updatedObject => resolve(updatedObject)).catch(err => reject(err));\n    });\n};\n\n"]}